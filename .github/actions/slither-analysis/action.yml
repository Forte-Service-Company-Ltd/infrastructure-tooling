name: On-chain Slither Analysis
description: Runs forge build and slither analysis for on-chain microservices.
inputs:
  CONFIG:
    description: Path to slither config file
    required: false
    default: ./slither.config.json
runs:
  using: "composite"
  steps:
    - name: Slither Analyze
      uses: crytic/slither-action@v0.4.1
      if: github.event_name != 'pull_request'
      id: slither
      continue-on-error: true
      with:
        slither-config: ${{ inputs.CONFIG }}
        fail-on: pedantic
        sarif: results.sarif

    - name: Upload SARIF file
      uses: actions/upload-artifact@v4
      if: always() && (github.event_name != 'pull_request')
      with:
        name: results.sarif
        path: ${{ steps.slither.outputs.sarif }}
        retention-days: 5

    - name: Slither Analyze Pull Request
      uses: crytic/slither-action@v0.4.1
      if: always() && (github.event_name == 'pull_request')
      id: slither-pull
      with:
        fail-on: pedantic
        slither-args: --checklist --checklist-limit 50 --skip-assembly --markdown-root ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/

    # - name: Create/update checklist as PR comment
    #   uses: actions/github-script@v7
    #   if: always() && (github.event_name == 'pull_request')
    #   env:
    #     REPORT: ${{ steps.slither-pull.outputs.stdout }}
    #   with:
    #     script: |
    #       const script = require('infrastructure-tooling/.github/scripts/slither-comment.js')
    #       const header = '<details><summary>Slither report</summary>\n'
    #       const body = process.env.REPORT + '</details>'
    #       await script({ github, context, header, body })

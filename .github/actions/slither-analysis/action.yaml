name: On-chain Build + Test
description: Runs forge build and slither analysis for on-chain microservices.
inputs:
  CONFIG:
    description: Path to slither config file
    required: false
    default: ./slither.config.json
runs:
  using: "composite"
  steps:
    - name: Checkout infrastructure-tooling repository
      uses: actions/checkout@v4
      with:
        repository: Forte-Service-Company-Ltd/infrastructure-tooling
        ref: INF-266-Adding-Slither-Analysis
        path: infrastructure-tooling

    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: v1.2.1

    - name: Install python dependencies for tests
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        pip3 install eth_abi
        forge install dapphub/ds-test 
        if [ -f requirements.txt ]; then
          pip3 install -r requirements.txt
        fi
        if [ -f soldeer.toml ] || [ -f forge.toml ] || [ -f foundry.toml ]; then
          forge soldeer install || echo "Warning: Soldeer install failed, continuing without soldeer dependencies"
        fi
        npm install

    - name: Display Foundry version
      shell: bash
      run: forge --version

    - name: Slither Analyze
      uses: crytic/slither-action@v0.4.1
      if: github.event_name != 'pull_request'
      id: slither
      continue-on-error: true
      with:
        slither-config: ${{ inputs.CONFIG }}
        fail-on: pedantic
        sarif: results.sarif

    - name: Upload SARIF file
      uses: actions/upload-artifact@v4
      if: always() && (github.event_name != 'pull_request')
      with:
        name: results.sarif
        path: ${{ steps.slither.outputs.sarif }}
        retention-days: 5

    - name: Slither Analyze Pull Request
      uses: crytic/slither-action@v0.4.1
      if: always() && (github.event_name == 'pull_request')
      id: slither-pull
      with:
        fail-on: pedantic
        slither-args: --checklist --checklist-limit 50 --skip-assembly --markdown-root ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/

    - name: Create/update checklist as PR comment
      uses: actions/github-script@v7
      if: always() && (github.event_name == 'pull_request')
      env:
        REPORT: ${{ steps.slither-pull.outputs.stdout }}
      with:
        script: |
          const script = require('infrastructure-tooling/.github/scripts/slither-comment.js')
          const header = '<details><summary>Slither report</summary>\n'
          const body = process.env.REPORT + '</details>'
          await script({ github, context, header, body })

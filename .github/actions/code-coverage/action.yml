name: On-chain Code Coverage
description: Runs code coverage evaluation for on-chain project.
inputs:
  alchemy_eth_api:
    description: The Alchemy API key to use for Ethereum RPC calls.
    required: false
  alchemy_polygon_api:
    description: The Alchemy API key to use for Polygon RPC calls.
    required: false
  fork-test:
    description: Whether to run tests that require forking mainnet.
    required: false
    default: "false"
  salt-string:
    description: Salt string for generating unique addresses in tests.
    required: false
    default: "SMELLING_SALTS"
  skip-forte-token-tests:
    description: Whether to skip tests related to Forte Token.
    required: false
    default: "true"
  is-forte-token-project:
    description: Whether this is the Forte Token project.
    required: false
    default: "false"
#   github_pr_comment_token:
#     description: 'GitHub token to post comments on PRs'
#     required: true
runs:
  using: "composite"
  steps:
    - name: Install LCOV and its dependencies on Linux
      shell: bash
      # Install LCOV so we can leverage lcov and genhtml commands
      # uses: hrishikesh-kadam/setup-lcov@v1 # This only brings an older incompatible version so we're manually installing
      run: |
        VERSION="2.0"
        mkdir lcov
        cd lcov
        sudo apt install alien -y
        sudo apt install libcapture-tiny-perl -y
        sudo apt install libdatetime-perl -y
        wget https://github.com/linux-test-project/lcov/releases/download/v$VERSION/lcov-$VERSION-1.noarch.rpm
        sudo alien lcov-$VERSION-1.noarch.rpm
        sudo dpkg -i lcov_$VERSION-2_all.deb
        lcov --version

    - name: Run tests with coverage option
      shell: bash
      env:
        ETHEREUM_RPC_KEY: ${{ inputs.alchemy_eth_api }}
        POLYGON_RPC_KEY: ${{ inputs.alchemy_polygon_api }}
        FORK_TEST: ${{ inputs['is-forte-token-project'] == 'true' && inputs['fork-test'] || 'false' }}
        SALT_STRING: ${{ inputs['is-forte-token-project'] == 'true' && inputs['salt-string'] || 'SMELLING_SALTS' }}
        SKIP_FORTE_TOKEN_TESTS: ${{ inputs['is-forte-token-project'] == 'true' && inputs['skip-forte-token-tests'] || 'true' }}
      run: |
        FOUNDRY_PROFILE=coverage forge coverage --ffi --report lcov --no-match-path "*invariant*" --fuzz-runs 1

    - name: Filter the coverage reports and reformat them
      shell: bash
      run: |
        lcov --extract lcov.info 'src/*' -o lcov.info
      #  lcov -r lcov.info 'example' --rc lcov_branch_coverage=1 --rc derive_function_end_line=0 -o lcov.info

    # - name: Report the code coverage if pull request
    #   if: ${{github.event_name}} == 'pull_request'
    #   uses: zgosalvez/github-actions-report-lcov@v3
    #   with:
    #     coverage-files: lcov.info
    #     minimum-coverage: 0
    #     github-token: ${{ input.GITHUB_TOKEN }}
    #     update-comment: false
